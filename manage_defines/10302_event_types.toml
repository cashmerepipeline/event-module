#
# 事件定义
#
# 事件结构定义在 表 级
# 事件由具体的记录发出，然后加入目标队列

id = "事件类型"
name_map = { zh = "事件类型", en = "event_types" }
description = {  zh = "事件类型", en = "event_type" }

# 数据描写 或者 模式
schema = [
  { data_type = "Boolean", name_map = { zh = "是否回馈", en = "has_echo" }, removed = false },
]


# 关联管理
manage = "String"
# 目标队列
target_queues = "List"
# entry_id
emitor = "String"

# 事件队列和消息队列表
[queues]

# 事件定义, 不是必须
[events]
event_queue = []
massage_queue = []

# 初始实体
[items]


[view_rules]

[view_rules.manage]
admin = { read_rule = "Read", write_rule = "Write", read_filters = [
  "NoLimit",
], write_filters = [
] }
user = { read_rule = "InVisible", write_rule = "InVisible", read_filters = [
  "NoLimit",
], write_filters = [
] }
[view_rules.collection]
admin = { read_rule = "Read", write_rule = "Write", read_filters = [
  "NoLimit",
], write_filters = [
] }
user = { read_rule = "InVisible", write_rule = "InVisible", read_filters = [
  "NoLimit",
], write_filters = [
] }

[view_rules.schema.1000]
admin = { read_rule = "Read", write_rule = "InVisible", read_filters = [
  "NoLimit",
], write_filters = [
] }
user = { read_rule = "Read", write_rule = "InVisible", read_filters = [
], write_filters = [
] }
[view_rules.schema.1001]
admin = { read_rule = "Read", write_rule = "InVisible", read_filters = [
  "NoLimit",
], write_filters = [
] }
user = { read_rule = "Read", write_rule = "InVisible", read_filters = [
], write_filters = [
] }
[view_rules.schema.1002]
admin = { read_rule = "Read", write_rule = "InVisible", read_filters = [
  "NoLimit",
], write_filters = [
] }
user = { read_rule = "Read", write_rule = "InVisible", read_filters = [
], write_filters = [
] }
[view_rules.schema.1003]
admin = { read_rule = "Read", write_rule = "InVisible", read_filters = [
  "NoLimit",
], write_filters = [
] }
user = { read_rule = "Read", write_rule = "InVisible", read_filters = [
], write_filters = [
] }
[view_rules.schema.1004]
admin = { read_rule = "Read", write_rule = "InVisible", read_filters = [
  "NoLimit",
], write_filters = [
] }
user = { read_rule = "Read", write_rule = "InVisible", read_filters = [
], write_filters = [
] }
[view_rules.schema.1005]
admin = { read_rule = "Read", write_rule = "InVisible", read_filters = [
  "NoLimit",
], write_filters = [
] }
user = { read_rule = "Read", write_rule = "InVisible", read_filters = [
], write_filters = [
] }
[view_rules.schema.1006]
admin = { read_rule = "Read", write_rule = "InVisible", read_filters = [
  "NoLimit",
], write_filters = [
] }
user = { read_rule = "Read", write_rule = "InVisible", read_filters = [
], write_filters = [
] }
[view_rules.schema.1007]
admin = { read_rule = "Read", write_rule = "InVisible", read_filters = [
  "NoLimit",
], write_filters = [
] }
user = { read_rule = "Read", write_rule = "InVisible", read_filters = [
], write_filters = [
] }
[view_rules.schema.1008]
admin = { read_rule = "Read", write_rule = "InVisible", read_filters = [
  "NoLimit",
], write_filters = [
] }
user = { read_rule = "Read", write_rule = "InVisible", read_filters = [
], write_filters = [
] }
[view_rules.schema.1009]
admin = { read_rule = "Read", write_rule = "InVisible", read_filters = [
  "NoLimit",
], write_filters = [
] }
user = { read_rule = "Read", write_rule = "InVisible", read_filters = [
], write_filters = [
] }
[view_rules.schema.1010]
admin = { read_rule = "Read", write_rule = "Write", read_filters = [
  "NoLimit",
], write_filters = [
] }
user = { read_rule = "Read", write_rule = "InVisible", read_filters = [
  "NoLimit",
], write_filters = [
] }
[view_rules.schema.1011]
admin = { read_rule = "Read", write_rule = "Write", read_filters = [
  "NoLimit",
], write_filters = [
] }
user = { read_rule = "Read", write_rule = "InVisible", read_filters = [
  "NoLimit",
], write_filters = [
] }

[view_rules.schema.2001]
admin = { read_rule = "Read", write_rule = "Write", read_filters = [
  "NoLimit",
], write_filters = [
] }
user = { read_rule = "Read", write_rule = "InVisible", read_filters = [
], write_filters = [
] }


[view_rules.schema.1200]
admin = { read_rule = "Read", write_rule = "Write", read_filters = [
  "NoLimit",
], write_filters = [
] }
user = { read_rule = "Read", write_rule = "InVisible", read_filters = [
  "NoLimit",
], write_filters = [
  "OnlyOwner",
] }
